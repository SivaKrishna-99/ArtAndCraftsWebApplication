/*
The implementation of these repository interfaces is automatically generated by the Spring Data framework, based on
the method signatures and annotations in the repository interfaces. This allows the application to focus on the
business logic and the behavior of the repositories, without worrying about the details of how the data is accessed
and manipulated in the database.

 In addition to providing a convenient and flexible way to access and manipulate data in the database,
 repositories also help to decouple the data access layer from the rest of the application.
 This allows the application to be more modular and maintainable, and it makes it easier to test and evolve the
 data access layer independently from the rest of the application.

 */
package Repository;
import model.ArtAndCraft;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.List;
import java.util.Optional;

public interface ArtAndCraftRepository extends JpaRepository<ArtAndCraft, Long> {

    List<ArtAndCraft> findByTitleContainingIgnoreCase(String title);
    List<ArtAndCraft> findAll();
    Optional<ArtAndCraft> findById(Long id);
    ArtAndCraft save(ArtAndCraft artAndCraft);




}
